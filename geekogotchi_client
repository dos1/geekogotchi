#!/usr/bin/env python

import dbus
from geekogotchi_ui import GeekogotchiUI

class GeekogotchiClient:
  ui = None
  bus = None
  def __init__(self):
    self.ui = GeekogotchiUI(self)
    self.ui.connect()
  def connect(self, *args, **kargs):
    '''Connect to Geekogotchi server'''
    if kargs.get('mainloop'):
      self.bus = dbus.SystemBus(mainloop = kargs['mainloop'])
      self.mainloop = True
    else:
      self.bus = dbus.SystemBus()
      self.mainloop = False
    self.server = dbus.Interface(self.bus.get_object('org.shr.Geekogotchi','/org/shr/Geekogotchi/Server'), dbus_interface='org.shr.Geekogotchi.Server')
    self.pets = dbus.Interface(self.bus.get_object('org.shr.Geekogotchi','/org/shr/Geekogotchi/Pets'), dbus_interface='org.shr.Geekogotchi.Pets')
    if self.mainloop:
      self.bus.add_signal_receiver(self.ui.update, dbus_interface="org.shr.Geekogotchi.Pet", signal_name="StateUpdated")

  def disconnect(self):
    '''Disonnect from Geekogotchi server'''
    return None
  def start(self):
    '''Start UI'''
    self.ui.start()
  def stop(self):
    '''Exit from UI mainloop'''
    self.ui.exit()
  def serverVersion(self):
    return self.server.GetVersion()
  def addPet(self):
    return self.pets.AddPet()
  def killPet(self, id):
    return self.pets.KillPet(id)
  def deletePet(self, id):
    return self.pets.DeletePet(id)
  def pet(self, id):
    '''Return character proxy'''
    return dbus.Interface(self.bus.get_object('org.shr.Geekogotchi','/org/shr/Geekogotchi/Pet/'+str(id)), dbus_interface='org.shr.Geekogotchi.Pet')
  def destroy(self):
    '''Shutting down client'''
    self.ui.destroy()
    self.ui = None

client = GeekogotchiClient()
client.start()
client.destroy()
